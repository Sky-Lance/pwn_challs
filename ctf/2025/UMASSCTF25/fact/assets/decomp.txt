/* This file was generated by the Hex-Rays decompiler version 9.1.0.250226.
   Copyright (c) 2007-2021 Hex-Rays <info@hex-rays.com>

   Detected compiler: GNU C++
*/

#include <defs.h>


//-------------------------------------------------------------------------
// Function declarations

__int64 (**init_proc())(void);
void sub_1020();
void sub_1030();
void sub_1040();
void sub_1050();
void sub_1060();
void sub_1070();
void sub_1080();
void sub_1090();
void sub_10A0();
void sub_10B0();
void sub_10C0();
void sub_10D0();
// int _cxa_finalize(void *);
// int puts(const char *s);
// void setbuf(FILE *stream, char *buf);
// int printf(const char *format, ...);
// ssize_t read(int fd, void *buf, size_t nbytes);
// void srand(unsigned int seed);
// time_t time(time_t *timer);
// int open(const char *file, int oflag, ...);
// __int64 __isoc99_scanf(const char *, ...); weak
// void __noreturn exit(int status);
// int rand(void);
void __fastcall __noreturn start(__int64 a1, __int64 a2, void (*a3)(void));
FILE **deregister_tm_clones();
__int64 register_tm_clones();
FILE **_do_global_dtors_aux();
__int64 frame_dummy(); // weak
const char *__fastcall change_name(const char *a1);
const char *__fastcall rename_(const char *a1);
const char *first_time_name();
int __fastcall multiplication_facts(__int64 a1, __int64 a2, const char *a3);
int __fastcall square_root_facts(__int64 a1, const char *a2);
int __fastcall xor_facts(__int64 a1, __int64 a2, const char *a3);
int __fastcall math_facts(const char *a1);
int __fastcall main(int argc, const char **argv, const char **envp);
void __noreturn win(); // weak
void term_proc();
// int _libc_start_main(int (*main)(int, char **, char **), int argc, char **ubp_av, void (*init)(void), void (*fini)(void), void (*rtld_fini)(void), void *stack_end);
// int __cxa_finalize(void *);
// __int64 _gmon_start__(void); weak

//-------------------------------------------------------------------------
// Data declarations

void *_dso_handle = &_dso_handle; // idb
FILE *_bss_start; // idb
char completed_0; // weak


//----- (0000000000001000) ----------------------------------------------------
__int64 (**init_proc())(void)
{
  __int64 (**result)(void); // rax

  result = &_gmon_start__;
  if ( &_gmon_start__ )
    return (__int64 (**)(void))_gmon_start__();
  return result;
}
// 4098: using guessed type __int64 _gmon_start__(void);

//----- (0000000000001020) ----------------------------------------------------
void sub_1020()
{
  JUMPOUT(0);
}
// 1026: control flows out of bounds to 0

//----- (0000000000001030) ----------------------------------------------------
void sub_1030()
{
  sub_1020();
}

//----- (0000000000001040) ----------------------------------------------------
void sub_1040()
{
  sub_1020();
}

//----- (0000000000001050) ----------------------------------------------------
void sub_1050()
{
  sub_1020();
}

//----- (0000000000001060) ----------------------------------------------------
void sub_1060()
{
  sub_1020();
}

//----- (0000000000001070) ----------------------------------------------------
void sub_1070()
{
  sub_1020();
}

//----- (0000000000001080) ----------------------------------------------------
void sub_1080()
{
  sub_1020();
}

//----- (0000000000001090) ----------------------------------------------------
void sub_1090()
{
  sub_1020();
}

//----- (00000000000010A0) ----------------------------------------------------
void sub_10A0()
{
  sub_1020();
}

//----- (00000000000010B0) ----------------------------------------------------
void sub_10B0()
{
  sub_1020();
}

//----- (00000000000010C0) ----------------------------------------------------
void sub_10C0()
{
  sub_1020();
}

//----- (00000000000010D0) ----------------------------------------------------
void sub_10D0()
{
  sub_1020();
}

//----- (00000000000011A0) ----------------------------------------------------
// positive sp value has been detected, the output may be wrong!
void __fastcall __noreturn start(__int64 a1, __int64 a2, void (*a3)(void))
{
  __int64 v3; // rax
  int v4; // esi
  __int64 v5; // [rsp-8h] [rbp-8h] BYREF
  char *retaddr; // [rsp+0h] [rbp+0h] BYREF

  v4 = v5;
  v5 = v3;
  _libc_start_main((int (*)(int, char **, char **))main, v4, &retaddr, 0, 0, a3, &v5);
  __halt();
}
// 11AA: positive sp value 8 has been found
// 11B1: variable 'v3' is possibly undefined

//----- (00000000000011D0) ----------------------------------------------------
FILE **deregister_tm_clones()
{
  return &_bss_start;
}

//----- (0000000000001200) ----------------------------------------------------
__int64 register_tm_clones()
{
  return 0;
}

//----- (0000000000001240) ----------------------------------------------------
FILE **_do_global_dtors_aux()
{
  FILE **result; // rax

  if ( !completed_0 )
  {
    if ( &__cxa_finalize )
      _cxa_finalize(_dso_handle);
    result = deregister_tm_clones();
    completed_0 = 1;
  }
  return result;
}
// 4018: using guessed type char completed_0;

//----- (0000000000001280) ----------------------------------------------------
__int64 frame_dummy()
{
  return register_tm_clones();
}
// 1280: using guessed type __int64 frame_dummy();

//----- (0000000000001289) ----------------------------------------------------
const char *__fastcall change_name(const char *a1)
{
  puts("Please type in your new name:");
  __isoc99_scanf("%8s", a1);
  printf("Your current name is: %s\n", a1);
  return a1;
}
// 1170: using guessed type __int64 __isoc99_scanf(const char *, ...);

//----- (00000000000012E4) ----------------------------------------------------
const char *__fastcall rename_(const char *a1)
{
  int i; // [rsp+1Ch] [rbp-14h]
  char v3[8]; // [rsp+20h] [rbp-10h] BYREF
  unsigned __int64 v4; // [rsp+28h] [rbp-8h]

  v4 = __readfsqword(0x28u);
  for ( i = 0; i <= 6; ++i )
    v3[i] = rand() % 26 + 97;
  v3[7] = 0;
  printf("Changing your name? How about %s?\n", v3);
  return change_name(a1);
}

//----- (000000000000138B) ----------------------------------------------------
const char *first_time_name()
{
  int i; // [rsp+4h] [rbp-3Ch]
  char v2[8]; // [rsp+8h] [rbp-38h] BYREF
  char v3[40]; // [rsp+10h] [rbp-30h] BYREF
  unsigned __int64 v4; // [rsp+38h] [rbp-8h]

  v4 = __readfsqword(0x28u);
  for ( i = 0; i <= 31; ++i )
    v3[i] = rand() % 26 + 97;
  v3[31] = 0;
  printf("Welcome to session %s!\n", v3);
  return change_name(v2);
}

//----- (000000000000142E) ----------------------------------------------------
int __fastcall multiplication_facts(__int64 a1, __int64 a2, const char *a3)
{
  return printf("%s, did you know that %llu * %llu = %llu?\n", a3, a1, a2, a2 * a1);
}

//----- (000000000000147B) ----------------------------------------------------
int __fastcall square_root_facts(__int64 a1, const char *a2)
{
  return printf("%s, did you know that the square root of %llu is %llu?\n", a2, a1 * a1, a1);
}

//----- (00000000000014BC) ----------------------------------------------------
int __fastcall xor_facts(__int64 a1, __int64 a2, const char *a3)
{
  return printf("%s, did you know that the bitwise XOR of %llu and %llu is %llu\n", a3, a1, a2, a2 ^ a1);
}

//----- (0000000000001508) ----------------------------------------------------
int __fastcall math_facts(const char *a1)
{
  __int16 v2; // [rsp+1Eh] [rbp-12h]
  __int64 v3; // [rsp+20h] [rbp-10h]
  __int64 v4; // [rsp+28h] [rbp-8h]

  v2 = rand() % 3;
  v3 = rand();
  v4 = rand();
  if ( v2 == 2 )
    return xor_facts(v3, v4, a1);
  if ( v2 > 2 )
    return printf("Hmmmmm, no math facts for you, %s\n", a1);
  if ( !v2 )
    return square_root_facts(v3, a1);
  if ( v2 == 1 )
    return multiplication_facts(v3, v4, a1);
  else
    return printf("Hmmmmm, no math facts for you, %s\n", a1);
}

//----- (00000000000015DA) ----------------------------------------------------
int __fastcall main(int argc, const char **argv, const char **envp)
{
  unsigned int v3; // eax
  const char *i; // [rsp+8h] [rbp-18h]
  char v6; // [rsp+17h] [rbp-9h] BYREF
  unsigned __int64 v7; // [rsp+18h] [rbp-8h]

  v7 = __readfsqword(0x28u);
  setbuf(_bss_start, 0);
  v3 = time(0);
  srand(v3);
  for ( i = first_time_name(); ; math_facts(i) )
  {
    while ( 1 )
    {
      puts("Options:\na. Rename\nb. Do math!\nc. Exit");
      __isoc99_scanf("%1s", &v6);
      if ( v6 != 97 )
        break;
      rename_(i);
    }
    if ( v6 != 98 )
      break;
  }
  return 0;
}
// 1170: using guessed type __int64 __isoc99_scanf(const char *, ...);

//----- (000000000000169F) ----------------------------------------------------
void __noreturn win()
{
  int fd; // [rsp+Ch] [rbp-94h]
  _QWORD buf[18]; // [rsp+10h] [rbp-90h] BYREF

  buf[17] = __readfsqword(0x28u);
  fd = open("flag.txt", 0);
  memset(buf, 0, 128);
  read(fd, buf, 0x80u);
  puts((const char *)buf);
  exit(0);
}
// 169F: using guessed type void __noreturn win();

//----- (0000000000001798) ----------------------------------------------------
void term_proc()
{
  ;
}

// nfuncs=54 queued=28 decompiled=28 lumina nreq=0 worse=0 better=0
// ALL OK, 28 function(s) have been successfully decompiled
